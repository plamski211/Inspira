# Build stage
FROM node:18-alpine AS builder
WORKDIR /app
COPY . .
RUN npm ci
RUN npm run build

# Production stage
FROM nginx:alpine
COPY --from=builder /app/dist /usr/share/nginx/html
COPY --from=builder /app/public/env-config.js /usr/share/nginx/html/env-config.js

# Create a proper NGINX configuration
RUN echo 'server {\n    listen 80;\n    server_name _;\n    root /usr/share/nginx/html;\n    index index.html;\n\n    # MIME types\n    include /etc/nginx/mime.types;\n\n    # Additional MIME type declarations\n    types {\n        application/javascript js;\n        text/css css;\n    }\n\n    # Serve static files\n    location / {\n        try_files $uri $uri/ /index.html;\n        add_header "Access-Control-Allow-Origin" "*";\n    }\n\n    # JavaScript files - explicitly set content type\n    location ~* \.js$ {\n        add_header Content-Type "application/javascript";\n        try_files $uri =404;\n    }\n\n    # CSS files - explicitly set content type\n    location ~* \.css$ {\n        add_header Content-Type "text/css";\n        try_files $uri =404;\n    }\n\n    # Handle API requests\n    location /api/ {\n        proxy_pass http://api-gateway;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "upgrade";\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n}' > /etc/nginx/conf.d/default.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
