# Server Configuration
server.port=8080
server.servlet.context-path=

# Database Configuration - Using PostgreSQL for Docker environment
spring.datasource.url=jdbc:postgresql://postgres-users:5432/users
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Auth0 Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-1ixkzn1oh8o82jto.us.auth0.com/
spring.security.oauth2.resourceserver.jwt.audiences=https://api.inspira.com

# CORS Configuration
cors.allowed-origins=http://localhost:4173,http://localhost:5173,http://frontend:4173
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Allow-Origin
cors.max-age=3600
cors.allow-credentials=true

# Logging Configuration
logging.level.org.springframework.security=DEBUG
logging.level.com.inspira=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.cors=TRACE

# Database connection retry properties
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000

# JWT Configuration
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://dev-1ixkzn1oh8o82jto.us.auth0.com/.well-known/jwks.json 