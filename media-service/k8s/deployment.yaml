# media-service/k8s/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-service
  namespace: microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: media-service
  template:
    metadata:
      labels:
        app: media-service
    spec:
      containers:
      - name: media-service
        image: ${REGISTRY}/media-service:${TAG}
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: AUTH_SERVICE_URL
          value: "http://auth-service"
        - name: KAFKA_BROKERS
          value: "kafka-0.kafka-headless:9092,kafka-1.kafka-headless:9092"
        - name: STORAGE_BUCKET
          valueFrom:
            configMapKeyRef:
              name: media-config
              key: storage-bucket
        - name: STORAGE_REGION
          valueFrom:
            configMapKeyRef:
              name: media-config
              key: storage-region
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: media-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: media-secrets
              key: aws-secret-access-key
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: media-service
  namespace: microservices
spec:
  selector:
    app: media-service
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP