apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-users
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-users
  template:
    metadata:
      labels:
        app: postgres-users
    spec:
      containers:
      - name: postgres
        image: postgres:13-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: users
        - name: POSTGRES_USER
          value: user_user
        - name: POSTGRES_PASSWORD
          value: user_pw
        volumeMounts:
        - name: postgres-users-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: postgres-users-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-users
  namespace: microservices
spec:
  selector:
    app: postgres-users
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-content
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-content
  template:
    metadata:
      labels:
        app: postgres-content
    spec:
      containers:
      - name: postgres
        image: postgres:13-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: content
        - name: POSTGRES_USER
          value: content_user
        - name: POSTGRES_PASSWORD
          value: content_pw
        volumeMounts:
        - name: postgres-content-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: postgres-content-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-content
  namespace: microservices
spec:
  selector:
    app: postgres-content
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-media
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-media
  template:
    metadata:
      labels:
        app: postgres-media
    spec:
      containers:
      - name: postgres
        image: postgres:13-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: media
        - name: POSTGRES_USER
          value: media_user
        - name: POSTGRES_PASSWORD
          value: media_pw
        volumeMounts:
        - name: postgres-media-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: postgres-media-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-media
  namespace: microservices
spec:
  selector:
    app: postgres-media
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:RELEASE.2023-03-20T20-16-18Z
        args:
        - server
        - /data
        - --console-address
        - ":9001"
        env:
        - name: MINIO_ROOT_USER
          value: minio
        - name: MINIO_ROOT_PASSWORD
          value: minio123
        ports:
        - containerPort: 9000
        - containerPort: 9001
        volumeMounts:
        - name: minio-data
          mountPath: /data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: minio-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: microservices
spec:
  selector:
    app: minio
  ports:
  - name: api
    port: 9000
    targetPort: 9000
  - name: console
    port: 9001
    targetPort: 9001
  type: ClusterIP 